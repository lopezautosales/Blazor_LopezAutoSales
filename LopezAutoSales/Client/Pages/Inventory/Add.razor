@page "/app/inventory/add"
@attribute [Authorize(Roles = "Admin")]
@inject AuthHttp auth
@inject HttpClient http
@inject NavigationManager nav
@inject IJSRuntime js
@inject VINDecoder decoder

<h1 class="text-center">Add Vehicle</h1>
<EditForm Model="car" OnValidSubmit="SubmitVehicle">
    <DataAnnotationsValidator />
    <ErrorDisplay Errors="Errors" />
    <div class="form-group">
        <label>VIN</label>
        <div class="input-group">
            <InputText class="form-control" @bind-Value="car.VIN"></InputText>
            <div class="input-group-append">
                <button type="button" class="btn btn-secondary" @onclick="async () => await decoder.TryDecodeAsync(car)">Verify</button>
            </div>
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-md-3">
            <label>Year</label>
            <InputNumber class="form-control" @bind-Value="car.Year"></InputNumber>
        </div>
        <div class="form-group col-md-3">
            <label>Make</label>
            <InputText class="form-control" @bind-Value="car.Make"></InputText>
        </div>
        <div class="form-group col-md-3">
            <label>Model</label>
            <InputText class="form-control" @bind-Value="car.Model"></InputText>
        </div>
        <div class="form-group col-md-3">
            <label>Color</label>
            <InputText class="form-control" @bind-Value="car.Color"></InputText>
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-md-3">
            <label>Mileage</label>
            <InputNumber class="form-control" placeholder="Exempt" @bind-Value="car.Mileage"></InputNumber>
        </div>
        <div class="form-group col-md-3">
            <label>Bought Price</label>
            <InputNumber class="form-control" @bind-Value="car.BoughtPrice"></InputNumber>
        </div>
        <div class="form-group col-md-3">
            <label>List Price</label>
            <InputNumber class="form-control" @bind-Value="car.ListPrice"></InputNumber>
        </div>
        <div class="form-group col-md-3 my-auto text-center">
            <div class="form-check">
                <InputCheckbox class="form-check-input" id="salvageCheck" @bind-Value="car.IsSalvage"></InputCheckbox>
                <label class="form-check-label" for="salvageCheck">Is Salvage</label>
            </div>
        </div>
    </div>
    <div class="text-right">
        <button type="submit" class="btn btn-secondary">Submit</button>
    </div>
</EditForm>

@code {
    private Car car = new Car();
    private List<string> Errors { get; set; } = new List<string>();

    private async Task SubmitVehicle()
    {
        await decoder.TryDecodeAsync(car);
        var response = await auth.Client.PostAsJsonAsync<Car>("/api/inventory", car);
        if (response.IsSuccessStatusCode)
        {
            string id = await response.Content.ReadAsStringAsync();
            nav.NavigateTo($"/app/inventory/edit/{id}");
        }
        else
            await js.InvokeVoidAsync("alert", response.ReasonPhrase);
    }
}
