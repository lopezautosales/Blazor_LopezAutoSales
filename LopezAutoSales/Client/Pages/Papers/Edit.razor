@page "/app/papers/edit/{id:int}"
@attribute [Authorize(Roles = "Admin")]
@inject AuthHttp auth
@inject CarManager carManager
@inject VINDecoder decoder
@inject NavigationManager navManager

<h1 class="text-center">Edit Sale</h1>
@if (sale is null)
{
    <p class="lead">Loading...</p>
}
else
{
    <EditForm Model="sale" OnSubmit="EditSale">
        <DataAnnotationsValidator />
        <ErrorDisplay Errors="Errors" />
        <div class="form-row">
            <div class="col-3 ml-auto">
                <div class="form-group">
                    <label for="Date">Date:</label>
                    <InputDate id="Date" class="form-control text-center" @bind-Value="sale.Date" />
                </div>
            </div>
        </div>
        <!--Buyer information-->
        <div class="form-row">
            <div class="col-4">
                <div class="form-group">
                    <label for="Buyer">Buyer:</label>
                    <InputText class="form-control" id="Buyer" @bind-Value="sale.Buyer" />
                </div>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <label for="CoBuyer">CoBuyer:</label>
                    <InputText class="form-control" id="CoBuyer" @bind-Value="sale.CoBuyer" />
                </div>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <label for="Phone">Phone:</label>
                    <input type="tel" class="form-control" id="Phone" @bind-value="sale.Phone" />
                </div>
            </div>
            <div class="col-3">
                <div class="form-group">
                    <label for="Street">Street:</label>
                    <InputText class="form-control" id="Street" @bind-Value="sale.Address.Street" />
                </div>
            </div>
            <div class="col-3">
                <div class="form-group">
                    <label for="City">City:</label>
                    <InputText class="form-control" id="City" @bind-Value="sale.Address.City" />
                </div>
            </div>
            <div class="col-3">
                <div class="form-group">
                    <label for="State">State:</label>
                    <InputText class="form-control" id="State" @bind-Value="sale.Address.State" />
                </div>
            </div>
            <div class="col-3">
                <div class="form-group">
                    <label for="ZIP">ZIP:</label>
                    <InputText class="form-control" id="ZIP" @bind-Value="sale.Address.ZIP" />
                </div>
            </div>
        </div>
        <hr />
        <div class="form-row">
            <div class="col-1">
                <div class="form-group">
                    <label for="Year">Year:</label>
                    <InputNumber class="form-control" id="Year" @bind-Value="sale.Car.Year" />
                </div>
            </div>
            <div class="col-2">
                <div class="form-group">
                    <label for="Make">Make:</label>
                    <InputText class="form-control" id="Make" @bind-Value="sale.Car.Make" />
                </div>
            </div>
            <div class="col-2">
                <div class="form-group">
                    <label for="Model">Model:</label>
                    <InputText class="form-control" id="Model" @bind-Value="sale.Car.Model" />
                </div>
            </div>
            <div class="col-2">
                <div class="form-group">
                    <label for="Mileage">Mileage:</label>
                    <InputNumber class="form-control" id="Mileage" @bind-Value="sale.Car.Mileage" />
                </div>
            </div>
            <div class="col-1">
                <div class="form-group">
                    <label for="Color">Color:</label>
                    <InputText class="form-control" id="Color" @bind-Value="sale.Car.Color" />
                </div>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <label for="VIN">VIN:</label>
                    <div class="input-group">
                        <InputText class="form-control" id="VIN" @bind-Value="sale.Car.VIN" />
                        <div class="input-group-append no-print">
                            <button type="button" class="btn btn-secondary" @onclick="async () => await decoder.TryDecodeAsync(sale.Car)">Verify</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <p>
            <button class="btn btn-secondary no-print" type="button" @onclick="ToggleTrade">
                Trade-in <Chevron Down="!hasTrade" />
            </button>
        </p>
        @if (hasTrade)
        {
            <div class="card card-body">
                <div class="form-row">
                    <div class="col-1">
                        <div class="form-group">
                            <label for="TradeYear">Year:</label>
                            <InputNumber class="form-control" id="TradeYear" @bind-Value="sale.TradeIn.Year" />
                        </div>
                    </div>
                    <div class="col-2">
                        <div class="form-group">
                            <label for="TradeMake">Make:</label>
                            <InputText class="form-control" id="TradeMake" @bind-Value="sale.TradeIn.Make" />
                        </div>
                    </div>
                    <div class="col-2">
                        <div class="form-group">
                            <label for="TradeModel">Model:</label>
                            <InputText class="form-control" id="TradeModel" @bind-Value="sale.TradeIn.Model" />
                        </div>
                    </div>
                    <div class="col-2">
                        <div class="form-group">
                            <label for="TradeMileage">Mileage:</label>
                            <InputNumber class="form-control" id="TradeMileage" @bind-Value="sale.TradeIn.Mileage" />
                        </div>
                    </div>
                    <div class="col-1">
                        <div class="form-group">
                            <label for="TradeColor">Color:</label>
                            <InputText class="form-control" id="TradeColor" @bind-Value="sale.TradeIn.Color" />
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="form-group">
                            <label for="TradeVIN">VIN:</label>
                            <div class="input-group">
                                <InputText class="form-control" id="TradeVIN" @bind-Value="sale.TradeIn.VIN" />
                                <div class="input-group-append no-print">
                                    <button type="button" class="btn btn-secondary" @onclick="async () => await decoder.TryDecodeAsync(sale.TradeIn)">Verify</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        <div class="form-row mt-3">
            <div class="col-6">
                <div class="table-responsive">
                    <table class="table text-center">
                        <tbody>
                            <tr>
                                <th scope="row">
                                    <label for="SellingPrice">Price:</label>
                                </th>
                                <td>
                                    <InputNumber class="form-control text-center" id="SellingPrice" @bind-Value="sale.SellingPrice" />
                                </td>
                            </tr>
                            @if (hasTrade)
                            {
                                <tr>
                                    <th scope="row">
                                        <label for="TradeValue">Trade Value:</label>
                                    </th>
                                    <td class="text-center">
                                        <InputNumber class="form-control text-center" id="TradeValue" @bind-Value="sale.TradeIn.BoughtPrice" />
                                    </td>
                                </tr>
                                <tr>
                                    <th scope="row">
                                        Trade Difference:
                                    </th>
                                    <td>
                                        <input type="number" class="form-control text-center" readonly value="@sale.TradeDifference()" />
                                    </td>
                                </tr>
                            }
                            <tr>
                                <th scope="row">
                                    <InputCheckbox class="form-check-input" id="IsOutOfState" @bind-Value="sale.IsOutOfState" />
                                    <label class="form-check-label" for="IsOutOfState">Out of State</label>
                                    <div class="input-group w-75 mx-auto">
                                        <div class="input-group-prepend">
                                            <div class="input-group-text">Tax:</div>
                                        </div>
                                        <InputNumber class="form-control text-center" @bind-Value="sale.TaxRate" />
                                        <div class="input-group-append">
                                            <div class="input-group-text">%</div>
                                        </div>
                                    </div>
                                </th>
                                <td>
                                    <input type="number" class="form-control text-center" readonly value="@sale.TaxAmount()" />
                                </td>
                            </tr>
                            <tr>
                                <th scope="row">
                                    <InputCheckbox class="form-check-input" id="HasLien" @bind-Value="sale.HasLien" />
                                    <label class="form-check-label" for="HasLien">Lien Release</label>
                                </th>
                                <td>
                                    <InputNumber class="form-control text-center" @bind-Value="sale.LienAmount" />
                                </td>
                            </tr>
                            <tr>
                                <th scope="row">
                                    <InputCheckbox class="form-check-input" id="HasTag" @bind-Value="sale.HasTag" />
                                    <label class="form-check-label" for="HasTag">Temporary Tag</label>
                                </th>
                                <td>
                                    <InputNumber class="form-control text-center" @bind-Value="sale.TagAmount" />
                                </td>
                            </tr>
                            <tr>
                                <th scope="row">
                                    <label for="Subtotal">Subtotal:</label>
                                </th>
                                <td>
                                    <input type="number" class="form-control text-center" value="@sale.Subtotal()" id="Subtotal" readonly />
                                </td>
                            </tr>
                            <tr>
                                <th scope="row">
                                    <label for="DownPayment">Down Payment:</label>
                                </th>
                                <td class="text-center">
                                    <InputNumber class="form-control text-center" id="DownPayment" @bind-Value="sale.DownPayment" />
                                </td>
                            </tr>
                            <tr>
                                <th scope="row">
                                    <label for="TotalDue">Total Due</label>
                                </th>
                                <td>
                                    <input type="number" class="form-control text-center" value="@sale.TotalDue()" id="TotalDue" readonly />
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="col-3 ml-auto">
                <div class="form-group no-print">
                    <label for="BoughtPrice">Bought Price:</label>
                    <InputNumber class="form-control" id="BoughtPrice" @bind-Value="sale.Car.BoughtPrice" />
                </div>
                <div class="form-group">
                    <label for="Warranty">Warranty:</label>
                    <InputNumber class="form-control" @bind-Value="sale.Warranty" />
                </div>
                @if (sale.TotalDue() > 0)
                {
                    <div class="form-group">
                        <label for="MonthlyPayment">Monthly Payment:</label>
                        <InputNumber class="form-control" id="MonthlyPayment" @bind-Value="sale.Account.MonthlyPayment" />
                    </div>
                    <div class="form-group">
                        <label for="FinanceCharge">Finance Charge:</label>
                        <InputNumber class="form-control" id="FinanceCharge" @bind-Value="sale.FinanceCharge" />
                    </div>
                    <div class="form-group">
                        <label for="TotalPayments">Total Payments:</label>
                        <input type="number" readonly class="form-control" id="TotalPayments" value="@sale.TotalPayments()" />
                    </div>
                    <div class="form-group">
                        <label for="MonthsToPay">Months to Pay:</label>
                        <input type="number" readonly class="form-control" id="MonthsToPay" value="@sale.MonthsToPay()" />
                    </div>
                }
            </div>
        </div>
        @if (sale.HasLien)
        {
            <div class="form-row">
                <div class="col-3">
                    <div class="form-group">
                        <label for="LienholderName">Lienholder Name:</label>
                        <InputText class="form-control" id="LienholderName" @bind-Value="sale.Lienholder.Name" />
                    </div>
                </div>
                <div class="col-3">
                    <div class="form-group">
                        <label for="LienholderStreet">Street:</label>
                        <InputText class="form-control" id="LienholderStreet" @bind-Value="sale.Lienholder.Address.Street" />
                    </div>
                </div>
                <div class="col-2">
                    <div class="form-group">
                        <label for="LienholderCity">City:</label>
                        <InputText class="form-control" id="LienholderCity" @bind-Value="sale.Lienholder.Address.City" />
                    </div>
                </div>
                <div class="col-2">
                    <div class="form-group">
                        <label for="LienholderState">State:</label>
                        <InputText class="form-control" id="LienholderState" @bind-Value="sale.Lienholder.Address.State" />
                    </div>
                </div>
                <div class="col-2">
                    <div class="form-group">
                        <label for="LienholderZIP">ZIP:</label>
                        <InputText class="form-control" id="LienholderZIP" @bind-Value="sale.Lienholder.Address.ZIP" />
                    </div>
                </div>
            </div>
        }
        <p class="text-right">
            <button type="submit" class="btn btn-secondary no-print">Complete Sale</button>
        </p>
    </EditForm>
}

@code {
    [Parameter]
    public int Id { get; set; }
    private List<string> Errors { get; set; } = new List<string>();
    private Sale sale;
    private bool hasTrade;

    protected override async Task OnInitializedAsync()
    {
        sale = await auth.Client.GetFromJsonAsync<Sale>($"/api/sale/view/{Id}");
        if (sale != null)
        {
            hasTrade = sale.TradeInId.HasValue;
            if (!hasTrade)
                sale.TradeIn = new Car();
            if (sale.Account == null)
                sale.Account = new Account();
            if (!sale.HasLien)
            {
                sale.Lienholder = new Lienholder { Address = Dealership.Address };
                sale.LienAmount = Dealership.LienAmount;
            }
            if(!sale.HasTag)
                sale.TagAmount = Dealership.TagAmount;
        }
        await base.OnInitializedAsync();
    }

    private void ToggleTrade()
    {
        hasTrade = !hasTrade;
        if (hasTrade == false)
            sale.TradeIn.BoughtPrice = null;
    }

    private async Task EditSale(EditContext e)
    {
        Errors.Clear();
        decimal due = sale.TotalDue();
        if (due < 0)
        {
            Errors.Add("Total due cannot be less than 0");
            return;
        }
        else if (due == 0)
        {
            if (sale.HasLien)
            {
                Errors.Add("Cannot have a lien on a paid sale.");
                return;
            }
            sale.Account = null;
        }
        else
        {
            sale.Account.InitialDue = due;
        }

        if (!e.Validate())
            return;

        if (!sale.HasLien)
        {
            sale.LienholderNormalizedName = null;
            sale.Lienholder = null;
        }
        if (!hasTrade)
        {
            sale.TradeInId = null;
            sale.TradeIn = null;
        }
        var response = await auth.Client.PutAsJsonAsync<Sale>($"/api/sale", sale);
        if (response.IsSuccessStatusCode)
        {
            navManager.NavigateTo($"/app/papers/view/{Id}");
        }
        else
        {
            Errors.AddRange(await response.Content.ReadFromJsonAsync<List<string>>());
        }
    }
}